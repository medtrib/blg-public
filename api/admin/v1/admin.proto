// Code generated by entproto. DO NOT EDIT.
syntax = "proto3";

package admin.v1;

import "google/api/annotations.proto";

import "validate/validate.proto";

import "openapiv3/annotations.proto";

import "google/protobuf/wrappers.proto";

import "google/protobuf/empty.proto";

option go_package = "github.com/medtrib/blg-public/api/admin/v1;v1";

option (openapi.v3.document) = {
    info: {
        title: "管理员服务",
        version: "0.0.1",
        contact: {
            name: "qi.zhou",
            url: "",
            email: ""
        },
        description: "管理员服务";
    },
};

// 管理员服务
service AdministratorService {
    // 列表
    rpc GetAdministratorList (GetAdministratorListReq) returns (GetAdministratorListPageRes){
        option (google.api.http) = {
            get:"/administrators"
        };
    };

    // 新增管理员
    rpc CreateAdministrator (CreateAdministratorReq) returns (Administrator){
        option (google.api.http) = {
            post:"/admin"
            body:"*"
        };
    };
    // 更新管理员
	rpc UpdateAdministrator (UpdateAdministratorReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            put:"/admin"
            body:"*"
        };
    };
    // 管理员详情
	rpc GetAdministrator (GetAdministratorReq) returns (Administrator){
        option (google.api.http) = {
            get:"/admin"
        };
    };
    // 删除管理员
	rpc DeleteAdministrator (DeleteAdministratorReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete:"/admin"
        };
    };
    // 恢复管理员
	rpc RecoverAdministrator (RecoverAdministratorReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch:"/admin"
            body:"*"
        };
    };
    // 验证管理员密码
	rpc VerifyAdministratorPassword(VerifyAdministratorPasswordReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            post:"/admin/password/verify"
            body:"*"
        };
    };
     // 更改管理员状态
	rpc AdministratorStatusChange(AdministratorStatusChangeReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch:"/admin/status"
            body:"*"
        };
    };

    rpc AdministratorLoginSuccess(AdministratorLoginSuccessReq) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch:"/admin/login/success"
            body:"*"
        };
    };
}

message GetAdministratorListReq {
    // 页码
	int64 page = 1[
        (validate.rules).int64.gt = 0
    ];
    // 页记录数
	int64 page_size = 2[
        (validate.rules).int64.gt = 0
    ];
    // 用户名
	string username = 3;
    // 手机号
	string mobile = 4;
    // 昵称
	string nickname = 5;
    // 状态 true正常 false冻结
	google.protobuf.BoolValue status = 6;
    // 创建开始时间 YYYY-MM-dd
	string created_at_start = 7;
    // 创建结束时间 YYYY-MM-dd
	string created_at_end = 8;
}

message GetAdministratorListPageRes {
    // 总记录数
	int64 total = 1;
    // 列表
	repeated Administrator list = 2;
}

message Administrator {
    // id
	int64 id = 1;
    // 用户名
	string username = 2;
    // 手机号
	string mobile = 3;
    // 昵称
	string nickname = 4;
    // 昵称
	string avatar = 5;
    // 状态 true正常 false冻结
	bool status = 6;
    // 角色
	string role = 7;
    // 上次登录时间
	string last_login_time = 8;
    // 上次登录ip
	string last_login_ip = 9;
    // 创建时间
	string created_at = 10;
    // 更新时间
	string updated_at = 11;
    // 删除时间
	string deleted_at = 12;
}



message CreateAdministratorReq {
    // 用户名
	string username = 1[
        (validate.rules).string = {
            pattern:   "^[a-zA-Z][a-zA-Z0-9_]{5,15}$",
            min_len: 5, 
            max_len: 20
        }    
    ];
    // 密码
	string password = 2[
        (validate.rules).string = {
            min_len: 6
        }    
    ];
    // 手机号
	string mobile = 3[
        (validate.rules).string = {
            pattern:   "^1[0-9]{10}$",
        }    
    ];
    // 昵称
	string nickname = 4[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 20
        }    
    ];
    // 头像
	string avatar = 5[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 255
        }    
    ];
    // 状态 true正常 false冻结
	bool status = 6;
    // 当前角色
	string role = 7[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 255
        }    
    ];
}

message UpdateAdministratorReq {
    // id
	int64 id = 1 [
        (validate.rules).int64.gt = 0
    ];
    // 用户名
	string username = 2[
        (validate.rules).string = {
            pattern:   "^[a-zA-Z][a-zA-Z0-9_]{3,15}$",
            min_len: 5, 
            max_len: 20
        }    
    ];
    // 密码
	string password = 3[
        (validate.rules).string = {
            min_len: 6
        }    
    ];
    // 手机号
	string mobile = 4[
        (validate.rules).string = {
            pattern:   "^1[0-9]{10}$",
        }    
    ];
    // 昵称
	string nickname = 5[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 20
        }    
    ];
    // 头像
	string avatar = 6[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 255
        }    
    ];
    // 状态 true正常 false冻结
	bool status = 7;
    // 角色
	string role = 8[
        (validate.rules).string = {
            min_len: 1, 
            max_len: 255
        }    
    ];
}

message DeleteAdministratorReq {
    // id
	int64 id = 1[
        (validate.rules).int64.gt = 0
    ];
}

message RecoverAdministratorReq {
    // id
	int64 id = 1[
        (validate.rules).int64.gt = 0
    ];
}

message GetAdministratorReq {
    // id
	int64 id = 1;
    // 用户名
	string username = 2;
    // 手机号
	string mobile = 3;
    // 角色
	string role = 4;
}


message VerifyAdministratorPasswordReq {
    // id
	int64 id = 1[
        (validate.rules).int64.gt = 0
    ];
    // 密码
	string password = 2[
        (validate.rules).string = {
            min_len: 6
        }    
    ];
}

message AdministratorStatusChangeReq {
    // id
	int64 id = 1[
        (validate.rules).int64.gt = 0
    ];
     // 状态 true正常 false冻结
	bool status = 2;
}

message AdministratorLoginSuccessReq {
	int64 id = 1;
	string last_login_time = 2;
	string last_login_ip = 3;
}
