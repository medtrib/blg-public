// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsBffRecordNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_BFF_RECORD_NOT_FOUND.String() && e.Code == 404
}

func ErrorBffRecordNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, ErrorReason_BFF_RECORD_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

func IsBffRecordAlreadyExists(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_BFF_RECORD_ALREADY_EXISTS.String() && e.Code == 400
}

func ErrorBffRecordAlreadyExists(format string, args ...interface{}) *errors.Error {
	return errors.New(400, ErrorReason_BFF_RECORD_ALREADY_EXISTS.String(), fmt.Sprintf(format, args...))
}

func IsBffBadRequest(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_BFF_BAD_REQUEST.String() && e.Code == 400
}

func ErrorBffBadRequest(format string, args ...interface{}) *errors.Error {
	return errors.New(400, ErrorReason_BFF_BAD_REQUEST.String(), fmt.Sprintf(format, args...))
}

func IsBffSystemError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_BFF_SYSTEM_ERROR.String() && e.Code == 500
}

func ErrorBffSystemError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_BFF_SYSTEM_ERROR.String(), fmt.Sprintf(format, args...))
}
