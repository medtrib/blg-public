// Code generated by entproto. DO NOT EDIT.
syntax = "proto3";

package log.v1;

import "google/api/annotations.proto";

import "validate/validate.proto";

import "openapiv3/annotations.proto";

import "google/protobuf/empty.proto";


option go_package = "github.com/medtrib/blg-log/api/log/v1";

option (openapi.v3.document) = {
    info: {
        title: "日志服务",
        version: "0.0.1",
        contact: {
            name: "your name",
            url: "",
            email: ""
        },
        description: "日志服务";
    },
};

// 日志服务
service LogService {
    // 列表
    rpc GetLogList(GetLogListReq) returns(GetLogListPageRes){
        option (google.api.http) = { 
            get:"/log"  
        };
    };

    // 创建
    rpc CreateLog(CreateLogReq) returns(google.protobuf.Empty){
        option (google.api.http) = { 
            post:"/log"  
            body:"*"
        };
    };
}

// 请求 - 创建
message CreateLogReq {
    // trace id
    string trace_id = 2;
    // http/rpc
    string component = 3;
    // 表
    string name = 4;
    // 响应时长
    string latency = 5;
    // 用户id
    string user_id = 6;
    // 请求方式
    string method = 7;
    // 请求路径
    string path = 8;
    // 请求内容
    string request = 9;
    // 响应编码
    string code = 10;
    // 提示信息
    string reason = 11;
    // 请求ip
    string ip = 12;
    // 创建时间 
    string created_at = 13;
    // kratos操作路径
    string operation = 14;
    // 用户名
    string username = 15;
    // 角色
    string role = 16;
}

// 响应 - 日志信息
message Log {
     // 日志id
     int64 id = 1;
     // trace id
     string trace_id = 2;
     // http/rpc
     string component = 3;
     // kratos操作路径
     string operation = 5;
     // 用户id
     string user_id = 6;
     // 请求方式
     string method = 7;
     // 请求路径
     string path = 8;
     // 请求内容
     string request = 9;
     // 响应内容
     string code = 10;
     // 提示信息
     string reason = 11;
     // 请求ip
     string ip = 12;
     // 创建时间 
     string created_at = 13;
     // 名称
     string name = 14;
     // 响应时长
    string latency = 15;
    // 用户名
    string username = 16;
    // 角色
    string role = 17;
}

// 响应 - 分页
message  GetLogListPageRes {
    // 总数
    int64 total = 1;
    // 列表
    repeated Log list = 2;
}

// 请求 - 分页列表
message  GetLogListReq {
    // 主键id
    int64 page = 1 [
        (validate.rules).int64.gt = 0
    ];

    // 页记录数
    int64 pageSize = 2 [
        (validate.rules).int64.gt = 0
    ];
     // 名称
     string name = 3;
     // userId
     string user_id = 4;
     // 用户名
     string username = 5;
     // 角色
     string role = 6;
     // 路径
     string operation = 7;
     // ip
     string ip = 8;
     // trace_id
     string trace_id = 9;
}
